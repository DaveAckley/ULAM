## -*- mode:ulam -*-
#=t41198_test_compiler_constantclasswish
#!
./QFoo.ulam:3:17: ERROR: Named Constant 'c_qbar' cannot be based on a class type: QBar.
./QFoo.ulam:3:17: ERROR: Invalid constant definition of type <QBar> and name <c_qbar>.
./QFoo.ulam:2:1: ERROR: Empty/Incomplete Class Definition 'QFoo'; Possible missing ending curly brace.
./QFoo.ulam:3:56: ERROR: Invalid Class Type <;>; KEYWORD should be 'element', 'quark', 'union', or 'transient', or 'local'.
./QFoo.ulam:2:7: ERROR: Invalid Type: QFoo.
 ERROR: No parse tree for This Class: QFoo.
Unrecoverable Program Parse FAILURE: <QFoo.ulam>
./QFoo.ulam:4:1: ERROR: Invalid Class Type <}>; KEYWORD should be 'element', 'quark', 'union', or 'transient', or 'local'.
Unrecoverable Program Parse FAILURE: <System.ulam>
##
## informed by t41191, testing new feature, the constant function parameter
## wish for a constant class, no func calls though.
##
#>Foo.ulam
  ulam 3;
element Foo {
  Bool b;
  //constant QBar c_qbar = { .r = {3, 2, 0}, .sp = true }; //

  Int test() {
    System s;
    Unsigned foosz = QFoo.sizeof;
    s.print(foosz);
    s.assert(foosz==0u);

    QFoo qfoo;
    b = qfoo.c_qbar.sp;
    s.assert(qfoo.c_qbar.sp);
    return 0;
  }
}

#:QBar.ulam
  ulam 3;
quark QBar {
  Bool sp;
  Unary(3) r[5] = {1};
}

#:QFoo.ulam
  ulam 3;
quark QFoo {
  constant QBar c_qbar = { .r = {3, 2, 0}, .sp = true }; //error
}


#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}
#.


/*
##
##  gen output:
##   Unsigned Arg: 0
#Exit status: 0
#Ue_Foo { Bool(1) b(false);  Int(32) test() {  System s;  Unsigned(32) foosz = 0u;  s ( foosz )print . s ( foosz 0u cast == )assert . QFoo qfoo;  b qf#oo c_qbar . sp . = s ( qfoo c_qbar . sp . )assert . 0 cast return } }
#Uq_System { <NOMAIN> }
#Uq_QFoo { constant QBar c_qbar = { .r = { 3 cast, 2 cast, 0 cast }, .sp = true };  <NOMAIN> }
#Uq_QBar { Bool(1) sp(false);  Unary(3) r[5]( { 1u });  <NOMAIN> }
*/
