## -*- mode:ulam -*-
#=t41232_test_compiler_transientconstantwelementdatamember
##
##  gen output: (+ 2 asserts)
##   Int Arg: 77
##
## transients are unevaluable.
#!
Exit status: -11
Ue_Test { Bool(1) m_testb(false);  Int(32) m_testi(0);  Int(32) test() {  System sys;  constant T ctt = { .m_rele = cer };  T est = ctt;  m_testi est m_rele . m_ri . = sys ( m_testi )print . sys ( m_testi 77 cast == )assert . m_testb est m_rele . m_rb . = sys ( m_testb )assert . 225u cast return } }
Ue_R { Bool(1) m_rb(false);  Int(32) m_ri(0);  <NOMAIN> }
Uq_System { <NOMAIN> }
Un_T { Bool(1) m_sp(false);  Int(32) m_i(0);  Atom(96) m_a(Atom(96));  R m_rele( Bool(1) m_rb(false);  Int(32) m_ri(0); );  <NOMAIN> }
##
##    //informed by t41231, except transient has an element data member
##
#>Test.ulam
  ulam 3;
local constant R cer = { .m_rb = true, .m_ri = 77 };
element Test {
  Bool m_testb;
  Int m_testi;
  Int test(){
    System sys;
    constant T ctt = { .m_rele = cer };

    T est = ctt;

    m_testi = est.m_rele.m_ri;
    sys.print(m_testi);
    sys.assert(m_testi == 77);

    m_testb = est.m_rele.m_rb;
    sys.assert(m_testb);

    return est.sizeof;
  }
}

#:T.ulam
 ulam 3;
transient T {
  Bool m_sp;
  Int m_i;
  Atom m_a;
  R m_rele;
}

#:R.ulam
  ulam 3;
element R {
  Bool m_rb;
  Int m_ri;
}


#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
